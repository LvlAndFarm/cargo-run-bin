[package]
name = "cargo-run-bin"
version = "1.1.4"
authors = ["Dustin Blackman"]
categories = ["command-line-utilities", "development-tools::cargo-plugins"]
edition = "2021"
homepage = "https://github.com/dustinblackman/cargo-run-bin"
keywords = ["dev-experiance", "developer-experiance", "bin", "cache", "cli"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/dustinblackman/cargo-run-bin"
description = "Build, cache, and run binaries scoped in Cargo.toml rather than installing globally. This acts similarly to npm run and gomodrun, and allows your teams to always be running the same tooling versions."

[[bin]]
name = "cargo-bin"
path = "src/main.rs"

[dependencies]
anyhow = "1.0.40"
cargo_toml = "0.10.3"
clap = "4.3.19"
owo-colors = "3.5.0"
serde = "1.0.149"
toml = "0.5.9"
toml_edit = "0.19.14"
version_check = "0.9.3"
which = "4.4.0"

[dev-dependencies]
assert_cmd = "2.0.12"
cargo-husky = { version = "1.5.0", default-features = false, features = ["user-hooks"] }
expectest = "0.12.0"

[package.metadata.bin]
cargo-binstall = { version = "1.1.2" }
cargo-cmd = { version = "0.3.1" }
cargo-deny = { version = "0.13.5" }
cargo-dist = { version = "0.1.0-prerelease.10" }
cargo-llvm-cov = { version = "0.5.25" }
cargo-nextest = { version = "0.9.57", locked = true }
cargo-release = { version = "0.24.11" }
committed = { version = "1.0.20" }
dprint = { version = "0.40.2" }
git-cliff = { version = "1.2.0" }
# Just added for testing
tauri-mobile = { version = "0.5.2", bins = ["cargo-android", "cargo-mobile"] }

[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
cargo-dist-version = "0.1.0-prerelease.10"
ci = ["github"]
installers = []
targets = ["x86_64-unknown-linux-gnu", "x86_64-apple-darwin", "aarch64-apple-darwin"]
unix-archive = ".tar.gz"

# Config for 'cargo release'
[package.metadata.release]
pre-release-hook = ["bash", "-c", "cargo cmd lint && cargo cmd test && cargo bin git-cliff -o CHANGELOG.md --tag {{version}}"]
allow-branch = ["master"]

[package.metadata.commands]
lint = '''set -e
cargo cmd setup-nightly
cargo +runbin-nightly fmt -- --check
cargo clippy
cargo bin dprint check
cargo deny check licenses -s
'''
lint-fix = '''set -e
cargo cmd setup-nightly
cargo clippy --fix --allow-dirty
cargo fix --allow-dirty
cargo +runbin-nightly fmt
cargo bin dprint fmt
'''

setup-nightly = '''
  export RUNBIN_NIGHTLY=nightly-2023-06-16
  rustup toolchain install "$RUNBIN_NIGHTLY" --component llvm-tools-preview rustfmt --force
  rustup toolchain link runbin-nightly "$(rustup toolchain list -v | grep $RUNBIN_NIGHTLY | grep '^nightly-' | awk '{print $2}')"
'''

test-coverage = '''set -e
  cargo build
  cargo llvm-cov nextest --ignore-filename-regex='_test.rs'
'''
test-coverage-html = '''set -e
  cargo build
  cargo llvm-cov nextest --open --ignore-filename-regex='_test.rs'
'''
test-coverage-lcov = '''set -e
  cargo build
  rm -f lcov.info
  cargo llvm-cov nextest --lcov --output-path lcov.info --ignore-filename-regex='_test.rs'
'''
test = '''set -e
  cargo build
  cargo nextest run
'''
